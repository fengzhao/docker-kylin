name: Docker Image CI

on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'README.md'
      - 'README_zh.md'
  schedule:
    - cron: '0 0 * * 0' # Run once a week at midnight on Sunday

jobs:
  generate-matrix:
    runs-on: ubuntu-latest
    outputs:
      urls: ${{ steps.set-urls.outputs.urls }}
    steps:
      - uses: actions/checkout@v4
      - id: set-urls
        run: |
          URLS=$(cat iso_urls.txt | jq -R -s -c 'split("\n") | map(select(length > 0))')
          echo "urls=$URLS" >> $GITHUB_OUTPUT

  build:
    needs: generate-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        url: ${{ fromJson(needs.generate-matrix.outputs.urls) }}
    steps:
    - uses: actions/checkout@v4

    - name: Download ISO
      run: |
        DOWNLOADED_ISO_PATH=$(./scripts/download-isos.sh "${{ matrix.url }}")
        echo "DOWNLOADED_ISO_PATH=$DOWNLOADED_ISO_PATH" >> $GITHUB_ENV

    - name: Build and Verify Docker image
      env:
        DOCKER_IMAGE_PREFIX: ${{ secrets.DOCKERHUB_USERNAME }}/kylin
      run: |
        # The build script requires sudo, so we need to run it with sudo
        # and make sure the environment variables are passed.
        sudo -E ./scripts/build.sh "${{ env.DOWNLOADED_ISO_PATH }}"

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push the Docker image to Docker Hub
      run: |
        IMAGE_TAG=$(cat image_tags.txt)
        ./scripts/verify-image.sh "$IMAGE_TAG"
        docker push "$IMAGE_TAG"

    - name: Clean up Docker images
      if: always()
      run: ./scripts/cleanup-docker-images.sh

  cleanup-scheduled:
    runs-on: ubuntu-latest
    steps:
      - name: Clean up old Docker images
        run: ./scripts/cleanup-docker-images.sh
